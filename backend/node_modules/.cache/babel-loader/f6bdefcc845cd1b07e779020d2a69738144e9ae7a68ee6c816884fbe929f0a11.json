{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\";\nimport * as THREE from \"three\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Axis = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        children: [/*#__PURE__*/_jsxDEV(\"geometry\", {\n          attach: \"geometry\",\n          vertices: [new THREE.Vector3(-5, 0, 0), new THREE.Vector3(5, 0, 0)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n          attach: \"material\",\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        children: [/*#__PURE__*/_jsxDEV(\"geometry\", {\n          attach: \"geometry\",\n          vertices: [new THREE.Vector3(0, -5, 0), new THREE.Vector3(0, 5, 0)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n          attach: \"material\",\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Axis;\nconst Box = _ref => {\n  let {\n    x,\n    y,\n    z,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, y, z],\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Box;\nconst Surface = _ref2 => {\n  let {\n    surface\n  } = _ref2;\n  const cubes = [];\n  let x = 0;\n  let z = 0;\n  surface.forEach((y, i) => {\n    for (let j = 0; j < y; j++) {\n      cubes.push( /*#__PURE__*/_jsxDEV(Box, {\n        x: x,\n        y: y / 2,\n        z: z,\n        color: \"#bada55\"\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this));\n      z += 1;\n    }\n    x += 1;\n    z = 0;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubes\n  }, void 0, false);\n};\n_c3 = Surface;\nconst Scene = _ref3 => {\n  let {\n    surface\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    camera: {\n      position: [0, 10, 10]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surface, {\n      surface: surface\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Axis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Scene;\nexport default Scene;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Axis\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Surface\");\n$RefreshReg$(_c4, \"Scene\");","map":{"version":3,"names":["THREE","React","Canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","Axis","children","position","attach","vertices","Vector3","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","Box","_ref","x","y","z","args","_c2","Surface","_ref2","surface","cubes","forEach","i","j","push","_c3","Scene","_ref3","style","width","height","camera","intensity","_c4","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\n\r\ntype Props = {\r\n  surface: number[];\r\n};\r\n\r\nconst Axis = () => {\r\n  return (\r\n    <>\r\n      {/* oś x */}\r\n      <mesh position={[0, 0, 0]}>\r\n        <line>\r\n          <geometry attach=\"geometry\" vertices={[new THREE.Vector3(-5, 0, 0), new THREE.Vector3(5, 0, 0)]} />\r\n          <lineBasicMaterial attach=\"material\" color=\"red\" />\r\n        </line>\r\n      </mesh>\r\n\r\n      {/* oś y */}\r\n      <mesh position={[0, 0, 0]}>\r\n        <line>\r\n          <geometry attach=\"geometry\" vertices={[new THREE.Vector3(0, -5, 0), new THREE.Vector3(0, 5, 0)]} />\r\n          <lineBasicMaterial attach=\"material\" color=\"blue\" />\r\n        </line>\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Box = ({ x, y, z, color }: { x: number; y: number; z: number; color: string }) => {\r\n  return (\r\n    <mesh position={[x, y, z]}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Surface = ({ surface }: Props) => {\r\n  const cubes: JSX.Element[] = [];\r\n\r\n  let x = 0;\r\n  let z = 0;\r\n\r\n  surface.forEach((y, i) => {\r\n    for (let j = 0; j < y; j++) {\r\n      cubes.push(<Box key={`${i}-${j}`} x={x} y={y / 2} z={z} color=\"#bada55\" />);\r\n      z += 1;\r\n    }\r\n\r\n    x += 1;\r\n    z = 0;\r\n  });\r\n\r\n  return <>{cubes}</>;\r\n};\r\n\r\nconst Scene = ({ surface }: Props) => {\r\n  return (\r\n    <Canvas style={{ width: \"100%\", height: \"100%\" }} camera={{ position: [0, 10, 10] }}>\r\n      <ambientLight intensity={0.2} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Surface surface={surface} />\r\n      <Axis />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}