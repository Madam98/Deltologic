{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\nimport { useSpring, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const [waterBlocks, setWaterBlocksArray] = useState([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(false);\n  const animation = useSpring({\n    from: {\n      opacity: 0,\n      marginTop: -50\n    },\n    to: {\n      opacity: 1,\n      marginTop: 0\n    },\n    config: {\n      duration: 10000\n    }\n  });\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      var _inputRef$current;\n      const inputValue = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume);\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n      setWaterBlocksArray(waterBlocks);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cloudContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      style: {\n        paddingTop: '18vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whiteCloud\",\n        src: whitecloud,\n        alt: \"whiteCloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showScene && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"sceneContainer\",\n      style: animation,\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        surface: surfaceArray,\n        waterBlocks: waterBlocks\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Enter array to check rain volume \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \" Data format example: 3, 2, 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputText\",\n        type: \"text\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleClick,\n          children: \"Check volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CRvFw1nrzjGH0PGkoTIlot7e4Fs=\", false, function () {\n  return [useSpring];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","whitecloud","getWaterVolume","findWaterBlocks","Scene","useSpring","animated","jsxDEV","_jsxDEV","App","_s","inputRef","surfaceArray","setSurfaceArray","waterBlocks","setWaterBlocksArray","key","setKey","showScene","setShowScene","animation","from","opacity","marginTop","to","config","duration","handleClick","_inputRef$current","inputValue","current","value","console","log","split","map","Number","volume","error","className","children","style","paddingTop","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","div","surface","type","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\nimport { useSpring, animated } from 'react-spring'\n\nfunction App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n  const [waterBlocks, setWaterBlocksArray] = useState<number[][]>([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(false);\n\n  const animation = useSpring({\n    from: { opacity: 0, marginTop: -50 },\n    to: { opacity: 1, marginTop: 0 },\n    config: { duration: 10000 }\n  })\n\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      const inputValue = inputRef.current?.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume)\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n      setWaterBlocksArray(waterBlocks);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"cloudContainer\">\n      <div className=\"center\" style={{paddingTop:'18vh'}}>\n        <img className=\"whiteCloud\" src={whitecloud} alt=\"whiteCloud\" />\n      </div>\n      {showScene && (\n      <animated.div className=\"sceneContainer\" style={animation}>\n        <Scene key={key} surface={surfaceArray} waterBlocks={waterBlocks} />\n      </animated.div>\n      )}\n      <div className=\"inputBox\">\n          <h4> Enter array to check rain volume </h4>\n          <h6> Data format example: 3, 2, 3</h6>\n          <input className=\"inputText\" type=\"text\" ref={inputRef} />\n        <div>\n          <button className=\"button\" onClick={handleClick}>Check volume</button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}