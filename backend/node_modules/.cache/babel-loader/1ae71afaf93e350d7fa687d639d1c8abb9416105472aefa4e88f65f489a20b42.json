{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\";\nimport * as THREE from \"three\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst boxArgs = [2, 1, 1];\nconst edgesGeometry = new THREE.EdgesGeometry(new THREE.BoxGeometry(...boxArgs));\nconst Box = _ref => {\n  let {\n    x,\n    y,\n    z\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, y, z],\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: boxArgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lineSegments\", {\n      geometry: edgesGeometry,\n      children: /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n        color: \"white\",\n        linewidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Box;\nconst Surface = _ref2 => {\n  let {\n    surface\n  } = _ref2;\n  const cubes = [];\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  surface.forEach((height, i) => {\n    for (let j = 0; j < height; j++) {\n      cubes.push( /*#__PURE__*/_jsxDEV(Box, {\n        x: x,\n        y: y,\n        z: z\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this));\n      y += 1;\n    }\n    y = 0;\n    z += 1;\n    x += 1;\n  });\n  const maxDim = Math.max(x, y, z); // oblicz maksymalną długość boku kwadratu\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubes\n  }, void 0, false);\n};\n_c2 = Surface;\nconst Scene = _ref3 => {\n  let {\n    surface\n  } = _ref3;\n  const maxDim = Math.max(...surface); // oblicz maksymalną długość boku kwadratu\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    camera: {\n      position: [maxDim / 2, maxDim / 2, maxDim + 5],\n      // ustaw pozycję kamery na osi x i y na połowie długości boku, a na osi z powyżej obiektów\n      near: 1,\n      far: 100\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surface, {\n      surface: surface\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Surface\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["THREE","React","Canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","boxArgs","edgesGeometry","EdgesGeometry","BoxGeometry","Box","_ref","x","y","z","position","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","geometry","linewidth","_c","Surface","_ref2","surface","cubes","forEach","height","i","j","push","maxDim","Math","max","_c2","Scene","_ref3","style","width","camera","near","far","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\n\r\ntype Props = {\r\n  surface: number[];\r\n};\r\n\r\nconst boxArgs = [2, 1, 1];\r\nconst edgesGeometry = new THREE.EdgesGeometry(new THREE.BoxGeometry(...boxArgs));\r\n\r\nconst Box = ({ x, y, z }: { x: number; y: number; z: number }) => {\r\n  return (\r\n    <mesh position={[x, y, z]}>\r\n      <boxBufferGeometry args={boxArgs} />\r\n      <meshStandardMaterial color=\"gray\" />\r\n      <lineSegments geometry={edgesGeometry}>\r\n        <lineBasicMaterial color=\"white\" linewidth={2} />\r\n      </lineSegments>\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Surface = ({ surface }: Props) => {\r\n  const cubes: JSX.Element[] = [];\r\n  let x = 0;\r\n  let y = 0;\r\n  let z = 0;\r\n\r\n  surface.forEach((height, i) => {\r\n    for (let j = 0; j < height; j++) {\r\n      cubes.push(<Box key={`${i}-${j}`} x={x} y={y} z={z} />);\r\n      y += 1;\r\n    }\r\n\r\n    y = 0;\r\n    z += 1;\r\n    x += 1;\r\n  });\r\n\r\n  const maxDim = Math.max(x, y, z); // oblicz maksymalną długość boku kwadratu\r\n\r\n  return <>{cubes}</>;\r\n};\r\n\r\nconst Scene = ({ surface }: Props) => {\r\n  const maxDim = Math.max(...surface); // oblicz maksymalną długość boku kwadratu\r\n\r\n  return (\r\n    <Canvas\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      camera={{\r\n        position: [maxDim / 2, maxDim / 2, maxDim + 5], // ustaw pozycję kamery na osi x i y na połowie długości boku, a na osi z powyżej obiektów\r\n        near: 1,\r\n        far: 100,\r\n      }}\r\n    >\r\n      <ambientLight intensity={0.2} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Surface surface={surface} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}