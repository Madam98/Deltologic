{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const handleClick = async () => {\n    try {\n      var _inputRef$current;\n      const inputValue = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"80vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: whitecloud,\n        alt: \"Ikona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          zIndex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Sprawd\\u017A opady\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 10,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        surface: surfaceArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bn5bmD+X6/4YyRXHTyn9X2fHXWs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","inputRef","useRef","surfaceArray","setSurfaceArray","useState","handleClick","_inputRef$current","inputValue","current","value","console","log","split","map","Number","volume","getWaterVolume","error","_jsxDEV","style","height","display","flexDirection","alignItems","children","className","src","whitecloud","alt","fileName","_jsxFileName","lineNumber","columnNumber","position","zIndex","type","ref","onClick","width","Scene","surface","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["function App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n\n  const handleClick = async () => {\n    try {\n      const inputValue = inputRef.current?.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div style={{ height: \"80vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <div className=\"center\">\n        <img className=\"icon\" src={whitecloud} alt=\"Ikona\" />\n        <div style={{ position: \"relative\", zIndex: 1 }}>\n          <input type=\"text\" ref={inputRef} />\n          <br />\n          <button onClick={handleClick}>Sprawd≈∫ opady</button>\n        </div>\n      </div>\n      <div style={{ position: \"relative\", zIndex: 10, width: \"100%\" }}>\n        <Scene surface={surfaceArray} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGC,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAW,EAAE,CAAC;EAE9D,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MAAA,IAAAC,iBAAA;MACF,MAAMC,UAAU,IAAAD,iBAAA,GAAGN,QAAQ,CAACQ,OAAO,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBG,KAAK;MAC1C,IAAI,CAACF,UAAU,EAAE;QACfG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACF;MACA,MAAMT,YAAY,GAAGK,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MACtDJ,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;MACzBC,eAAe,CAACD,YAAY,CAAC;MAC7B,MAAMa,MAAM,GAAG,MAAMC,cAAc,CAACd,YAAY,CAAC;MACjDQ,OAAO,CAACC,GAAG,CAAE,iBAAgBI,MAAO,EAAC,CAAC;IACxC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEC,OAAA;IAAKC,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC7FN,OAAA;MAAKO,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBN,OAAA;QAAKO,SAAS,EAAC,MAAM;QAACC,GAAG,EAAEC,UAAW;QAACC,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDd,OAAA;QAAKC,KAAK,EAAE;UAAEc,QAAQ,EAAE,UAAU;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAV,QAAA,gBAC9CN,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAACC,GAAG,EAAEpC;QAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCd,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNd,OAAA;UAAQmB,OAAO,EAAEhC,WAAY;UAAAmB,QAAA,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNd,OAAA;MAAKC,KAAK,EAAE;QAAEc,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,EAAE;QAAEI,KAAK,EAAE;MAAO,CAAE;MAAAd,QAAA,eAC9DN,OAAA,CAACqB,KAAK;QAACC,OAAO,EAAEtC;MAAa;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CApCQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}