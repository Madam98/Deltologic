{"ast":null,"code":"const BASE_URL = 'http://localhost:5000';\nexport async function getWaterVolume(arr) {\n  const url = `${BASE_URL}/water-volume`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(arr)\n  });\n  if (!response.ok) {\n    throw new Error(`API error: ${response.statusText}`);\n  }\n  const data = await response.json();\n  return data.volume;\n}","map":{"version":3,"names":["BASE_URL","getWaterVolume","arr","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","volume"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/api/controller.tsx"],"sourcesContent":["const BASE_URL = 'http://localhost:5000';\r\n\r\ninterface WaterVolumeResponse {\r\n  volume: number;\r\n}\r\n\r\nexport async function getWaterVolume(arr: number[]): Promise<number> {\r\n  const url = `${BASE_URL}/water-volume`;\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(arr)\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(`API error: ${response.statusText}`);\r\n  }\r\n  const data: WaterVolumeResponse = await response.json();\r\n  return data.volume;\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAMxC,OAAO,eAAeC,cAAcA,CAACC,GAAa,EAAmB;EACnE,MAAMC,GAAG,GAAI,GAAEH,QAAS,eAAc;EACtC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG;EAC1B,CAAC,CAAC;EACF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,cAAaR,QAAQ,CAACS,UAAW,EAAC,CAAC;EACtD;EACA,MAAMC,IAAyB,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;EACvD,OAAOD,IAAI,CAACE,MAAM;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}