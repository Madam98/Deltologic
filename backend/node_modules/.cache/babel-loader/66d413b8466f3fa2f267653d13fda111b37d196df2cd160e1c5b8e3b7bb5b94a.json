{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cube = () => {\n  _s();\n  const meshRef = useRef(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useFrame(_ref => {\n    let {\n      mouse\n    } = _ref;\n    const {\n      x,\n      y\n    } = mouse;\n    const mesh = meshRef.current;\n    if (mesh) {\n      mesh.rotation.x += (y - mousePosition.y) * 0.01;\n      mesh.rotation.y += (x - mousePosition.x) * 0.01;\n      setMousePosition({\n        x,\n        y\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Cube, \"yq+/Jr06qKeGpv+F6Qy3KRs6f08=\", false, function () {\n  return [useFrame];\n});\n_c = Cube;\nconst Axes = () => {\n  _s2();\n  const axesHelperRef = useRef(null);\n  useFrame(() => {\n    if (axesHelperRef.current) {\n      axesHelperRef.current.scale.set(50, 50, 50);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"axesHelper\", {\n    ref: axesHelperRef,\n    args: [5]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s2(Axes, \"1PGq3Vf+oPI+d4axwbR5Oo7LySg=\", false, function () {\n  return [useFrame];\n});\n_c2 = Axes;\nconst Scene = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      background: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Axes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"Axes\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["React","useRef","useState","Canvas","useFrame","jsxDEV","_jsxDEV","Cube","_s","meshRef","mousePosition","setMousePosition","x","y","_ref","mouse","mesh","current","rotation","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","Axes","_s2","axesHelperRef","scale","set","_c2","Scene","style","background","intensity","position","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Canvas, useFrame } from \"@react-three/fiber\";\r\n\r\nconst Cube = () => {\r\n  const meshRef = useRef<THREE.Mesh>(null);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n\r\n  useFrame(({ mouse }) => {\r\n    const { x, y } = mouse;\r\n    const mesh = meshRef.current;\r\n\r\n    if (mesh) {\r\n      mesh.rotation.x += (y - mousePosition.y) * 0.01;\r\n      mesh.rotation.y += (x - mousePosition.x) * 0.01;\r\n      setMousePosition({ x, y });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh ref={meshRef}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color=\"red\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Axes = () => {\r\n  const axesHelperRef = useRef<THREE.AxesHelper>(null);\r\n\r\n  useFrame(() => {\r\n    if (axesHelperRef.current) {\r\n      axesHelperRef.current.scale.set(50, 50, 50);\r\n    }\r\n  });\r\n\r\n  return <axesHelper ref={axesHelperRef} args={[5]} />;\r\n};\r\n\r\nconst Scene = () => {\r\n  return (\r\n    <Canvas style={{ background: \"white\" }}>\r\n      <ambientLight intensity={0.5} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Cube />\r\n      <Axes />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}