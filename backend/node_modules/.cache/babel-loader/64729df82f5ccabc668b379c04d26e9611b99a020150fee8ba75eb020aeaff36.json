{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const [waterBlocks, setWaterBlocksArray] = useState([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(true);\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      var _inputRef$current;\n      const inputValue = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume);\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n      setWaterBlocksArray(waterBlocks);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"40vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      style: {\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: whitecloud,\n        alt: \"Ikona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), showScene && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 2,\n        width: \"100%\",\n        height: \"100%\",\n        top: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        surface: surfaceArray,\n        waterBlocks: waterBlocks\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          zIndex: 1,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Sprawd\\u017A opady\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TSaLFADOHqhIgmI0FkSu7vwD/bc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","whitecloud","getWaterVolume","findWaterBlocks","Scene","jsxDEV","_jsxDEV","App","_s","inputRef","surfaceArray","setSurfaceArray","waterBlocks","setWaterBlocksArray","key","setKey","showScene","setShowScene","handleClick","_inputRef$current","inputValue","current","value","console","log","split","map","Number","volume","error","style","height","display","flexDirection","alignItems","children","className","padding","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","position","zIndex","width","top","justifyContent","surface","textAlign","type","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './animation/cloud.json';\nimport { Stage, Layer, Rect, Group } from \"react-konva\";\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\n\nfunction App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n  const [waterBlocks, setWaterBlocksArray] = useState<number[][]>([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(true);\n\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      const inputValue = inputRef.current?.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume)\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n      setWaterBlocksArray(waterBlocks);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div style={{ height: \"40vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <div className=\"center\" style={{padding:'10px'}}>\n      <img className=\"icon\" src={whitecloud} alt=\"Ikona\" />\n      </div>\n      {showScene && (\n      <div style={{ position: \"relative\", zIndex: 2, width: \"100%\", height: \"100%\", top: \"20px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Scene key={key} surface={surfaceArray} waterBlocks={waterBlocks} />\n      </div>\n      )}\n\n    <div className=\"center\">    \n        <div style={{ position: \"relative\", zIndex: 1, textAlign: 'center' }}>\n          <input type=\"text\" ref={inputRef} />\n          <br />\n          <button onClick={handleClick}>Sprawdź opady</button>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}