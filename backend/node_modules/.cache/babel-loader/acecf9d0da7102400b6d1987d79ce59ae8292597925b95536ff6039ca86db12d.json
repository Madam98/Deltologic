{"ast":null,"code":"export const getWaterVolume = async surfaceArray => {\n  try {\n    console.log(surfaceArray);\n    const response = await fetch(\"http://localhost:5000/calculate-volume\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        surfaceArray\n      })\n    });\n    const data = await response.json();\n    return data.volume;\n  } catch (error) {\n    console.error(error);\n    throw new Error(\"Wystąpił błąd podczas wykonywania żądania.\");\n  }\n};","map":{"version":3,"names":["getWaterVolume","surfaceArray","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","volume","error","Error"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/api/controller.tsx"],"sourcesContent":["export const getWaterVolume = async (surfaceArray: number[]): Promise<number> => {\r\n  try {\r\n    console.log(surfaceArray);\r\n    const response = await fetch(\"http://localhost:5000/calculate-volume\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ surfaceArray }),\r\n    });\r\n    const data = await response.json();\r\n    return data.volume;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw new Error(\"Wystąpił błąd podczas wykonywania żądania.\");\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAOC,YAAsB,IAAsB;EAC/E,IAAI;IACFC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAa,CAAC;IACvC,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,OAAOD,IAAI,CAACE,MAAM;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}