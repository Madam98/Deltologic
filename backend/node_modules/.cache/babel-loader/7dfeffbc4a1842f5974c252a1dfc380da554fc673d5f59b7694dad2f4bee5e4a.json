{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Rect, Group } from \"react-konva\";\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [surfaceArray, setSurfaceArray] = useState([3, 2, 3]);\n  const [waterLevel, setWaterLevel] = useState(0);\n  const handleCalculate = async () => {\n    const volume = await getWaterVolume(surfaceArray);\n    setWaterLevel(volume);\n  };\n  const maxSurfaceHeight = Math.max(...surfaceArray);\n  const columnWidth = 50;\n  const columnGap = 10;\n  const stageWidth = (columnWidth + columnGap) * surfaceArray.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate water volume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      width: stageWidth,\n      height: maxSurfaceHeight + 100,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [surfaceArray.map((height, i) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: (columnWidth + columnGap) * i,\n          y: maxSurfaceHeight - height,\n          width: columnWidth,\n          height: height,\n          fill: \"lightblue\",\n          stroke: \"black\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Group, {\n          y: maxSurfaceHeight,\n          children: [surfaceArray.map((height, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: (columnWidth + columnGap) * i,\n            y: 0,\n            width: columnWidth,\n            height: 0,\n            fill: \"blue\",\n            stroke: \"black\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Rect, {\n            x: 0,\n            y: 0,\n            width: stageWidth,\n            height: -waterLevel,\n            fill: \"blue\",\n            opacity: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nxx51DHWVxfdDbX1eSAEnwUFnf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Stage","Layer","Rect","Group","getWaterVolume","jsxDEV","_jsxDEV","App","_s","surfaceArray","setSurfaceArray","waterLevel","setWaterLevel","handleCalculate","volume","maxSurfaceHeight","Math","max","columnWidth","columnGap","stageWidth","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","map","i","x","y","fill","stroke","opacity","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './animation/cloud.json';\nimport { Stage, Layer, Rect, Group } from \"react-konva\";\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\n\nfunction App() {\n  const [surfaceArray, setSurfaceArray] = useState([3, 2, 3]);\n  const [waterLevel, setWaterLevel] = useState(0);\n\n  const handleCalculate = async () => {\n    const volume = await getWaterVolume(surfaceArray);\n    setWaterLevel(volume);\n  };\n\n  const maxSurfaceHeight = Math.max(...surfaceArray);\n  const columnWidth = 50;\n  const columnGap = 10;\n  const stageWidth = (columnWidth + columnGap) * surfaceArray.length;\n\n  return (\n    <div>\n      <button onClick={handleCalculate}>Calculate water volume</button>\n      <Stage width={stageWidth} height={maxSurfaceHeight + 100}>\n        <Layer>\n          {surfaceArray.map((height, i) => (\n            <Rect\n              key={i}\n              x={(columnWidth + columnGap) * i}\n              y={maxSurfaceHeight - height}\n              width={columnWidth}\n              height={height}\n              fill=\"lightblue\"\n              stroke=\"black\"\n            />\n          ))}\n          <Group y={maxSurfaceHeight}>\n            {surfaceArray.map((height, i) => (\n              <Rect\n                key={i}\n                x={(columnWidth + columnGap) * i}\n                y={0}\n                width={columnWidth}\n                height={0}\n                fill=\"blue\"\n                stroke=\"black\"\n              />\n            ))}\n            <Rect\n              x={0}\n              y={0}\n              width={stageWidth}\n              height={-waterLevel}\n              fill=\"blue\"\n              opacity={0.5}\n            />\n          </Group>\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgB,OAAO;AAG/C,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,aAAa;AAEvD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,MAAM,GAAG,MAAMV,cAAc,CAACK,YAAY,CAAC;IACjDG,aAAa,CAACE,MAAM,CAAC;EACvB,CAAC;EAED,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGR,YAAY,CAAC;EAClD,MAAMS,WAAW,GAAG,EAAE;EACtB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,UAAU,GAAG,CAACF,WAAW,GAAGC,SAAS,IAAIV,YAAY,CAACY,MAAM;EAElE,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAQiB,OAAO,EAAEV,eAAgB;MAAAS,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACjErB,OAAA,CAACN,KAAK;MAAC4B,KAAK,EAAER,UAAW;MAACS,MAAM,EAAEd,gBAAgB,GAAG,GAAI;MAAAO,QAAA,eACvDhB,OAAA,CAACL,KAAK;QAAAqB,QAAA,GACHb,YAAY,CAACqB,GAAG,CAAC,CAACD,MAAM,EAAEE,CAAC,kBAC1BzB,OAAA,CAACJ,IAAI;UAEH8B,CAAC,EAAE,CAACd,WAAW,GAAGC,SAAS,IAAIY,CAAE;UACjCE,CAAC,EAAElB,gBAAgB,GAAGc,MAAO;UAC7BD,KAAK,EAAEV,WAAY;UACnBW,MAAM,EAAEA,MAAO;UACfK,IAAI,EAAC,WAAW;UAChBC,MAAM,EAAC;QAAO,GANTJ,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAQT,CAAC,eACFrB,OAAA,CAACH,KAAK;UAAC8B,CAAC,EAAElB,gBAAiB;UAAAO,QAAA,GACxBb,YAAY,CAACqB,GAAG,CAAC,CAACD,MAAM,EAAEE,CAAC,kBAC1BzB,OAAA,CAACJ,IAAI;YAEH8B,CAAC,EAAE,CAACd,WAAW,GAAGC,SAAS,IAAIY,CAAE;YACjCE,CAAC,EAAE,CAAE;YACLL,KAAK,EAAEV,WAAY;YACnBW,MAAM,EAAE,CAAE;YACVK,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC;UAAO,GANTJ,CAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAQT,CAAC,eACFrB,OAAA,CAACJ,IAAI;YACH8B,CAAC,EAAE,CAAE;YACLC,CAAC,EAAE,CAAE;YACLL,KAAK,EAAER,UAAW;YAClBS,MAAM,EAAE,CAAClB,UAAW;YACpBuB,IAAI,EAAC,MAAM;YACXE,OAAO,EAAE;UAAI;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACnB,EAAA,CAvDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}