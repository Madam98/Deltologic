{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as THREE from \"three\";\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cube = () => {\n  _s();\n  const meshRef = useRef < THREE.Mesh > null;\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.02;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Cube, \"xC67171NPRcCAzsbrenetil66NI=\", false, function () {\n  return [useFrame];\n});\n_c = Cube;\nconst CameraController = () => {\n  _s2();\n  const {\n    camera\n  } = useThree();\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    const x = clientX / window.innerWidth * 2 - 1;\n    const y = -(clientY / window.innerHeight) * 2 + 1;\n    camera.position.set(x * 10, y * 10, 10);\n    camera.lookAt(0, 0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0\n    },\n    onMouseMove: handleMouseMove\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(CameraController, \"44XKsTesKVjIHDbH9uQR1TSiqHg=\", false, function () {\n  return [useThree];\n});\n_c2 = CameraController;\nconst Scene = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CameraController, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        background: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cube, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"CameraController\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["THREE","React","useRef","Canvas","useFrame","useThree","jsxDEV","_jsxDEV","Fragment","_Fragment","Cube","_s","meshRef","Mesh","current","rotation","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","CameraController","_s2","camera","handleMouseMove","event","clientX","clientY","x","window","innerWidth","innerHeight","position","set","lookAt","style","top","left","onMouseMove","_c2","Scene","background","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.jsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\n\r\ntype ThreeMouseEvent = React.MouseEvent<HTMLCanvasElement, MouseEvent> & {\r\n  raycast: THREE.Intersection[];\r\n};\r\n\r\nconst Cube = () => {\r\n  const meshRef = useRef<THREE.Mesh>(null);\r\n\r\n  useFrame(() => {\r\n    if (meshRef.current) {\r\n      meshRef.current.rotation.y += 0.02;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh ref={meshRef}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color=\"red\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst CameraController = () => {\r\n  const { camera } = useThree();\r\n\r\n  const handleMouseMove = (event: ThreeMouseEvent) => {\r\n    const { clientX, clientY } = event;\r\n    const x = (clientX / window.innerWidth) * 2 - 1;\r\n    const y = -(clientY / window.innerHeight) * 2 + 1;\r\n    camera.position.set(x * 10, y * 10, 10);\r\n    camera.lookAt(0, 0, 0);\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      style={{ position: \"absolute\", top: 0, left: 0 }}\r\n      onMouseMove={handleMouseMove}\r\n    />\r\n  );\r\n};\r\n\r\nconst Scene = () => {\r\n  return (\r\n    <>\r\n      <CameraController />\r\n      <Canvas style={{ background: \"white\" }}>\r\n        <ambientLight intensity={0.5} />\r\n        <pointLight position={[10, 10, 10]} />\r\n        <Cube />\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}