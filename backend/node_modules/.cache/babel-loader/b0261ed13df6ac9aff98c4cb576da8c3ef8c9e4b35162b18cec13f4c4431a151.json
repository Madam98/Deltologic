{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleClick = async () => {\n    try {\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: whitecloud,\n      alt: \"Ikona\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Sprawd\\u017A opady\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KrYsHqn7a8/H1rV8IX4Ggz/jiJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","whitecloud","getWaterVolume","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","surfaceArray","setSurfaceArray","handleInputChange","e","target","value","handleClick","volume","console","log","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginTop","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './animation/cloud.json';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleClick = async () => {\n    try {\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"center\">\n      <img className=\"icon\" src={whitecloud} alt=\"Ikona\" />\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"1rem\" }}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n        <br />\n        <button onClick={handleClick}>Sprawd≈∫ opady</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAE9D,MAAMW,iBAAiB,GAAIC,CAAsC,IAAK;IACpEJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMd,cAAc,CAACO,YAAY,CAAC;MACjDQ,OAAO,CAACC,GAAG,CAAE,iBAAgBF,MAAO,EAAC,CAAC;IACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBjB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAACE,GAAG,EAAErB,UAAW;MAACsB,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrDvB,OAAA;MAAKwB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAChGjB,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACnB,KAAK,EAAEP,UAAW;QAAC2B,QAAQ,EAAEvB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrEvB,OAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACNvB,OAAA;QAAQ+B,OAAO,EAAEpB,WAAY;QAAAM,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACrB,EAAA,CA3BQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}