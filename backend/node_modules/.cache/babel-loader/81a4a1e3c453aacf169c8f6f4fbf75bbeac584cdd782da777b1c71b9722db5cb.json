{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cube = () => {\n  _s();\n  const meshRef = useRef(null);\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.02;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Cube, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = Cube;\nconst Axes = () => {\n  _s2();\n  const axesHelperRef = useRef(null);\n  useFrame(() => {\n    if (axesHelperRef.current) {\n      axesHelperRef.current.scale.set(50, 50, 50);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"axesHelper\", {\n    ref: axesHelperRef,\n    args: [5]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_s2(Axes, \"1PGq3Vf+oPI+d4axwbR5Oo7LySg=\", false, function () {\n  return [useFrame];\n});\n_c2 = Axes;\nconst Scene = () => {\n  _s3();\n  const {\n    camera\n  } = useThree();\n  useFrame(() => {\n    if (camera) {\n      camera.position.set(0, 0, 3);\n      camera.lookAt(0, 0, 0);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      background: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Axes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s3(Scene, \"K6LkdZnP8OJ6UK0tVtTtxiafG3Y=\", false, function () {\n  return [useThree, useFrame];\n});\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"Axes\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","useThree","jsxDEV","_jsxDEV","Cube","_s","meshRef","current","rotation","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","Axes","_s2","axesHelperRef","scale","set","_c2","Scene","_s3","camera","position","lookAt","style","background","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\n\r\nconst Cube = () => {\r\n  const meshRef = useRef<THREE.Mesh>(null);\r\n\r\n  useFrame(() => {\r\n    if (meshRef.current) {\r\n      meshRef.current.rotation.y += 0.02;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh ref={meshRef}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color=\"red\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Axes = () => {\r\n  const axesHelperRef = useRef<THREE.AxesHelper>(null);\r\n\r\n  useFrame(() => {\r\n    if (axesHelperRef.current) {\r\n      axesHelperRef.current.scale.set(50, 50, 50);\r\n    }\r\n  });\r\n\r\n  return <axesHelper ref={axesHelperRef} args={[5]} />;\r\n};\r\n\r\nconst Scene = () => {\r\n  const { camera } = useThree();\r\n\r\n  useFrame(() => {\r\n    if (camera) {\r\n      camera.position.set(0, 0, 3);\r\n      camera.lookAt(0, 0, 0);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Canvas style={{ background: \"white\" }}>\r\n      <ambientLight intensity={0.5} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Cube />\r\n      <Axes />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}