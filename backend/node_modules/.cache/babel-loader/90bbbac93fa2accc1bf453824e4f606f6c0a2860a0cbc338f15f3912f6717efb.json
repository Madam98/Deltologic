{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const [waterBlocks, setWaterBlocksArray] = useState([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(true);\n  const [showVolume, setShowVolume] = useState(false);\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      var _inputRef$current;\n      const inputValue = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      setShowVolume(true);\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      setWaterBlocksArray(waterBlocks);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume);\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cloudContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      style: {\n        paddingTop: '18vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whiteCloud\",\n        src: whitecloud,\n        alt: \"whiteCloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showScene && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sceneContainer\",\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        surface: surfaceArray,\n        waterBlocks: waterBlocks\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputBox\",\n      children: [!showVolume && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Enter array to check rain volume \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Data format example: 3, 2, 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputText\",\n          type: \"text\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Check volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), showVolume && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" VOLUME: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Enter new value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GojZB2yGqlMC8sjV5tH5o0hLrYw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","whitecloud","getWaterVolume","findWaterBlocks","Scene","jsxDEV","_jsxDEV","App","_s","inputRef","surfaceArray","setSurfaceArray","waterBlocks","setWaterBlocksArray","key","setKey","showScene","setShowScene","showVolume","setShowVolume","handleClick","_inputRef$current","inputValue","current","value","console","log","split","map","Number","volume","error","className","children","style","paddingTop","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","surface","type","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport findWaterBlocks from './utils/findWaterBlocks';\nimport './App.css';\nimport Scene from \"./components/scene\";\n\nfunction App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n  const [waterBlocks, setWaterBlocksArray] = useState<number[][]>([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(true);\n  const [showVolume, setShowVolume] = useState(false);\n  \n\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      const inputValue = inputRef.current?.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      setShowVolume(true);\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const waterBlocks = findWaterBlocks(surfaceArray);\n      setWaterBlocksArray(waterBlocks);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(volume)\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"cloudContainer\">\n      <div className=\"center\" style={{paddingTop:'18vh'}}>\n        <img className=\"whiteCloud\" src={whitecloud} alt=\"whiteCloud\" />\n      </div>\n        {showScene && (\n          <div className=\"sceneContainer\">\n            <Scene key={key} surface={surfaceArray} waterBlocks={waterBlocks} />\n          </div>\n        )}\n      <div className=\"inputBox\">\n      {!showVolume && (\n        <div>\n          <h4> Enter array to check rain volume </h4>\n          <h6> Data format example: 3, 2, 3</h6>\n          <input className=\"inputText\" type=\"text\" ref={inputRef} />\n          <div>\n            <button className=\"button\" onClick={handleClick}>Check volume</button>\n          </div>  \n          </div>\n          )}\n      {showVolume && (\n        <div>\n          <h4> VOLUME: </h4>\n          <div>\n            <button className=\"button\" onClick={handleClick}>Enter new value</button>\n          </div> \n        </div>\n          )}\n\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}