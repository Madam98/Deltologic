{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\nimport Scene from \"./components/scene\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [surfaceArray, setSurfaceArray] = useState([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(false);\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      var _inputRef$current;\n      const inputValue = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"80vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: whitecloud,\n        alt: \"Ikona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          zIndex: 1,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Sprawd\\u017A opady\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showScene && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 2,\n        width: \"50%\",\n        height: \"600%\",\n        top: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        surface: surfaceArray\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rOUN1sgx02uPa9Wf5lDZEQhhuG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","whitecloud","getWaterVolume","Scene","jsxDEV","_jsxDEV","App","_s","inputRef","surfaceArray","setSurfaceArray","key","setKey","showScene","setShowScene","handleClick","_inputRef$current","inputValue","current","value","console","log","split","map","Number","volume","error","style","height","display","flexDirection","alignItems","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","position","zIndex","textAlign","type","ref","onClick","width","top","justifyContent","surface","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './animation/cloud.json';\nimport { Stage, Layer, Rect, Group } from \"react-konva\";\nimport whitecloud from './assets/whitecloud.png';\nimport { getWaterVolume } from './api/controller';\nimport './App.css';\nimport Scene from \"./components/scene\";\n\nfunction App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [surfaceArray, setSurfaceArray] = useState<number[]>([]);\n  const [key, setKey] = useState(0);\n  const [showScene, setShowScene] = useState(false);\n\n  const handleClick = async () => {\n    setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n    setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    try {\n      const inputValue = inputRef.current?.value;\n      if (!inputValue) {\n        console.log('Pole tekstowe jest puste');\n        return;\n      }\n      const surfaceArray = inputValue.split(',').map(Number);\n      console.log(surfaceArray);\n      setSurfaceArray(surfaceArray);\n      const volume = await getWaterVolume(surfaceArray);\n      console.log(`Water volume: ${volume}`);\n      setKey(key + 1); // zmiana klucza, aby wymusić ponowne wyrenderowanie\n      setShowScene(true); // ustawienie flagi, aby wyświetlić \"Scene\"\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div style={{ height: \"80vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <div className=\"center\">\n        <img className=\"icon\" src={whitecloud} alt=\"Ikona\" />\n        <div style={{ position: \"relative\", zIndex: 1, textAlign: 'center' }}>\n          <input type=\"text\" ref={inputRef} />\n          <br />\n          <button onClick={handleClick}>Sprawdź opady</button>\n\n        </div>\n\n      </div>\n\n      {showScene && (\n      <div style={{ position: \"relative\", zIndex: 2, width: \"50%\", height: \"600%\", top: \"20px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Scene key={key} surface={surfaceArray} />\n      </div>\n\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}