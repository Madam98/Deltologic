{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.jsx\",\n  _s = $RefreshSig$();\nimport * as THREE from \"three\";\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cube = () => {\n  _s();\n  const meshRef = useRef < THREE.Mesh > null;\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff0000\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    style: {\n      background: \"white\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    ref: el => {\n      if (el && !el.id) {\n        el.id = \"three-canvas\";\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Cube, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Cube;\nexport default Cube;\nvar _c;\n$RefreshReg$(_c, \"Cube\");","map":{"version":3,"names":["THREE","React","useRef","useEffect","jsxDEV","_jsxDEV","Cube","_s","meshRef","Mesh","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","add","animate","requestAnimationFrame","rotation","y","render","removeChild","style","background","width","height","ref","el","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.jsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nconst Cube = () => {\r\n  const meshRef = useRef<THREE.Mesh>(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      cube.rotation.y += 0.01;\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      document.body.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      style={{ background: \"white\", width: \"100%\", height: \"100%\" }}\r\n      ref={(el) => {\r\n        if (el && !el.id) {\r\n          el.id = \"three-canvas\";\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,OAAO,GAAGN,MAAM,GAACF,KAAK,CAACS,IAAI,GAAE,IAAK;EAExCN,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAG,IAAIV,KAAK,CAACW,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIZ,KAAK,CAACa,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAE9C,MAAMC,QAAQ,GAAG,IAAIxB,KAAK,CAACyB,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAI1B,KAAK,CAAC2B,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAI7B,KAAK,CAACS,IAAI,CAACe,QAAQ,EAAEE,QAAQ,CAAC;IAC/ChB,KAAK,CAACoB,GAAG,CAACD,IAAI,CAAC;IAGf,MAAME,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BF,IAAI,CAACI,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBjB,QAAQ,CAACkB,MAAM,CAACzB,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDmB,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXX,QAAQ,CAACC,IAAI,CAACe,WAAW,CAACnB,QAAQ,CAACM,UAAU,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IACEgC,KAAK,EAAE;MAAEC,UAAU,EAAE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAC9DC,GAAG,EAAGC,EAAE,IAAK;MACX,IAAIA,EAAE,IAAI,CAACA,EAAE,CAACC,EAAE,EAAE;QAChBD,EAAE,CAACC,EAAE,GAAG,cAAc;MACxB;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACxC,EAAA,CA7CID,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}