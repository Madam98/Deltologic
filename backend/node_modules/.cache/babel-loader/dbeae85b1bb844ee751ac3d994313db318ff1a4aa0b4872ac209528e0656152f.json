{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\",\n  _s = $RefreshSig$();\nimport * as THREE from \"three\";\nimport React, { useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Edges = _ref => {\n  _s();\n  let {\n    x,\n    y,\n    z\n  } = _ref;\n  const ref = useRef();\n  return /*#__PURE__*/_jsxDEV(\"lineSegments\", {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"edgesGeometry\", {\n      attach: \"geometry\",\n      args: [new THREE.BoxBufferGeometry(1, 1, 1)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshLambertMaterial\", {\n      attach: \"material\",\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_s(Edges, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n_c = Edges;\nconst Box = _ref2 => {\n  let {\n    x,\n    y,\n    z\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, y, z],\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshLambertMaterial\", {\n      attach: \"material\",\n      color: \"gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Edges, {\n      x: x,\n      y: y,\n      z: z\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Box;\nconst Surface = _ref3 => {\n  let {\n    surface\n  } = _ref3;\n  const cubes = [];\n  let x = 0;\n  let z = 0;\n  surface.forEach((y, i) => {\n    for (let j = 0; j < y; j++) {\n      cubes.push( /*#__PURE__*/_jsxDEV(Box, {\n        x: x,\n        y: y / 2,\n        z: z\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this));\n      z += 1;\n    }\n    x += 1;\n    z = 0;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubes\n  }, void 0, false);\n};\n_c3 = Surface;\nconst Scene = _ref4 => {\n  let {\n    surface\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    camera: {\n      position: [0, -10, 0],\n      scale: [100, 100, 100]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surface, {\n      surface: surface\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Scene;\nexport default Scene;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Edges\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Surface\");\n$RefreshReg$(_c4, \"Scene\");","map":{"version":3,"names":["THREE","React","useRef","Canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","Edges","_ref","_s","x","y","z","ref","children","attach","args","BoxBufferGeometry","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","Box","_ref2","position","_c2","Surface","_ref3","surface","cubes","forEach","i","j","push","_c3","Scene","_ref4","style","width","height","camera","scale","intensity","_c4","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\n\r\ntype Props = {\r\n  surface: number[];\r\n};\r\n\r\nconst Edges = ({ x, y, z }: { x: number; y: number; z: number }) => {\r\n    const ref = useRef<THREE.LineSegments>();\r\n    return (\r\n      <lineSegments ref={ref}>\r\n        <edgesGeometry attach=\"geometry\" args={[new THREE.BoxBufferGeometry(1, 1, 1)]} />\r\n        <meshLambertMaterial attach=\"material\" color=\"white\" />\r\n      </lineSegments>\r\n    );\r\n  };\r\n  \r\n\r\n  const Box = ({ x, y, z }: { x: number; y: number; z: number }) => {\r\n    return (\r\n      <mesh position={[x, y, z]}>\r\n        <boxBufferGeometry args={[1, 1, 1]} />\r\n        <meshLambertMaterial attach=\"material\" color=\"gray\" />\r\n        <Edges x={x} y={y} z={z} />\r\n      </mesh>\r\n    );\r\n  };\r\n\r\nconst Surface = ({ surface }: Props) => {\r\n  const cubes: JSX.Element[] = [];\r\n  let x = 0;\r\n  let z = 0;\r\n\r\n  surface.forEach((y, i) => {\r\n    for (let j = 0; j < y; j++) {\r\n      cubes.push(<Box key={`${i}-${j}`} x={x} y={y / 2} z={z} />);\r\n      z += 1;\r\n    }\r\n\r\n    x += 1;\r\n    z = 0;\r\n  });\r\n\r\n  return <>{cubes}</>;\r\n};\r\n\r\nconst Scene = ({ surface }: Props) => {\r\n  return (\r\n    <Canvas style={{ width: \"100%\", height: \"100%\" }} camera={{ position: [0, -10, 0], scale: [100, 100, 100] }}>\r\n      <ambientLight intensity={0.2} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Surface surface={surface} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}