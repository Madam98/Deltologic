{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Box = _ref => {\n  let {\n    x,\n    y,\n    z,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, y, z],\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"white\",\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Box;\nconst Surface = _ref2 => {\n  let {\n    surface\n  } = _ref2;\n  const cubes = [];\n  let x = 0;\n  let z = 0;\n  surface.forEach((y, i) => {\n    for (let j = 0; j < y; j++) {\n      cubes.push( /*#__PURE__*/_jsxDEV(Box, {\n        x: x,\n        y: y / 2,\n        z: z,\n        color: \"#abacab\"\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this));\n      z += 1;\n    }\n    x += 1;\n    z = 0;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubes\n  }, void 0, false);\n};\n_c2 = Surface;\nconst Scene = _ref3 => {\n  let {\n    surface\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    camera: {\n      position: [0, 10, 10],\n      scale: [30, 30, 30]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surface, {\n      surface: surface\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Surface\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["React","Canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","Box","_ref","x","y","z","color","position","children","args","fileName","_jsxFileName","lineNumber","columnNumber","wireframe","_c","Surface","_ref2","surface","cubes","forEach","i","j","push","_c2","Scene","_ref3","style","width","height","camera","scale","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\n\r\ntype Props = {\r\n  surface: number[];\r\n};\r\n\r\nconst Box = ({ x, y, z, color }: { x: number; y: number; z: number; color: string }) => {\r\n  return (\r\n    <mesh position={[x, y, z]}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={color} />\r\n      <meshBasicMaterial color=\"white\" wireframe={true} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Surface = ({ surface }: Props) => {\r\n  const cubes: JSX.Element[] = [];\r\n\r\n  let x = 0;\r\n  let z = 0;\r\n\r\n  surface.forEach((y, i) => {\r\n    for (let j = 0; j < y; j++) {\r\n      cubes.push(<Box key={`${i}-${j}`} x={x} y={y / 2} z={z} color=\"#abacab\" />);\r\n      z += 1;\r\n    }\r\n\r\n    x += 1;\r\n    z = 0;\r\n  });\r\n\r\n  return <>{cubes}</>;\r\n};\r\n\r\nconst Scene = ({ surface }: Props) => {\r\n  return (\r\n    <Canvas style={{ width: \"100%\", height: \"100%\" }} camera={{ position: [0, 10, 10], scale: [30, 30, 30] }}>\r\n      <ambientLight intensity={0.2} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Surface surface={surface} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}