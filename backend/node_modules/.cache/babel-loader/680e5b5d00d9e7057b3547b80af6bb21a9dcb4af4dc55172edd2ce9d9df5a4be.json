{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { Box } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = () => {\n  _s();\n  const meshRef = useRef();\n  const {\n    size\n  } = useThree();\n  useFrame(() => {\n    meshRef.current.rotation.x += 0.01;\n    meshRef.current.rotation.y += 0.02;\n    meshRef.current.scale.set(size.width, size.height, size.width);\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      background: \"white\"\n    },\n    camera: {\n      position: [0, 0, 5]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: meshRef,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"B0TNW4vubBjMhv8n+TbE79zg8xw=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","useThree","Box","jsxDEV","_jsxDEV","Scene","_s","meshRef","size","current","rotation","x","y","scale","set","width","height","style","background","camera","position","children","intensity","fileName","_jsxFileName","lineNumber","columnNumber","ref","color","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { Box } from \"@react-three/drei\";\r\n\r\nconst Scene = () => {\r\n  const meshRef = useRef();\r\n  const { size } = useThree();\r\n\r\n  useFrame(() => {\r\n    meshRef.current.rotation.x += 0.01;\r\n    meshRef.current.rotation.y += 0.02;\r\n    meshRef.current.scale.set(size.width, size.height, size.width);\r\n  });\r\n\r\n  return (\r\n    <Canvas style={{ background: \"white\" }} camera={{ position: [0, 0, 5] }}>\r\n      <ambientLight intensity={0.5} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Box ref={meshRef}>\r\n        <meshStandardMaterial color=\"gray\" />\r\n      </Box>\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AAC/D,SAASC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAGT,MAAM,CAAC,CAAC;EACxB,MAAM;IAAEU;EAAK,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAE3BD,QAAQ,CAAC,MAAM;IACbO,OAAO,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;IAClCJ,OAAO,CAACE,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAI,IAAI;IAClCL,OAAO,CAACE,OAAO,CAACI,KAAK,CAACC,GAAG,CAACN,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACQ,MAAM,EAAER,IAAI,CAACO,KAAK,CAAC;EAChE,CAAC,CAAC;EAEF,oBACEX,OAAA,CAACL,MAAM;IAACkB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAACC,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAE;IAAAC,QAAA,gBACtEjB,OAAA;MAAckB,SAAS,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCtB,OAAA;MAAYgB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCtB,OAAA,CAACF,GAAG;MAACyB,GAAG,EAAEpB,OAAQ;MAAAc,QAAA,eAChBjB,OAAA;QAAsBwB,KAAK,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACpB,EAAA,CAnBID,KAAK;EAAA,QAEQJ,QAAQ,EAEzBD,QAAQ;AAAA;AAAA6B,EAAA,GAJJxB,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}