{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Documents\\\\GitHub\\\\Delto\\\\client\\\\src\\\\components\\\\scene.tsx\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst boxArgs = {\n  width: 1,\n  height: 1,\n  depth: 1\n};\nconst Box = _ref => {\n  let {\n    x,\n    y,\n    z\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, y, z],\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"lineSegments\", {\n      children: [/*#__PURE__*/_jsxDEV(\"edgesGeometry\", {\n        attach: \"geometry\",\n        args: boxArgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n        color: \"white\",\n        linewidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_c = Box;\nconst Surface = _ref2 => {\n  let {\n    surface\n  } = _ref2;\n  const cubes = [];\n  let x = 0;\n  let z = 0;\n  surface.forEach((y, i) => {\n    for (let j = 0; j < y; j++) {\n      cubes.push( /*#__PURE__*/_jsxDEV(Box, {\n        x: x,\n        y: y / 2,\n        z: z\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this));\n      z += 1;\n    }\n    x += 1;\n    z = 0;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubes\n  }, void 0, false);\n};\n_c2 = Surface;\nconst Scene = _ref3 => {\n  let {\n    surface\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    camera: {\n      position: [0, -10, 0],\n      scale: [100, 100, 100]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surface, {\n      surface: surface\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Scene;\nexport default Scene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Surface\");\n$RefreshReg$(_c3, \"Scene\");","map":{"version":3,"names":["React","Canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","boxArgs","width","height","depth","Box","_ref","x","y","z","position","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","attach","linewidth","_c","Surface","_ref2","surface","cubes","forEach","i","j","push","_c2","Scene","_ref3","style","camera","scale","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/adamm/Documents/GitHub/Delto/client/src/components/scene.tsx"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\n\r\ntype Props = {\r\n  surface: number[];\r\n};\r\n\r\nconst boxArgs = { width: 1, height: 1, depth: 1 };\r\n\r\nconst Box = ({ x, y, z }: { x: number; y: number; z: number }) => {\r\n    return (\r\n      <mesh position={[x, y, z]}>\r\n        <boxBufferGeometry args={[1, 1, 1]} />\r\n        <meshStandardMaterial color=\"gray\" />\r\n        <lineSegments>\r\n          <edgesGeometry attach=\"geometry\" args={boxArgs} />\r\n          <lineBasicMaterial color=\"white\" linewidth={2} />\r\n        </lineSegments>\r\n      </mesh>\r\n    );\r\n  };\r\nconst Surface = ({ surface }: Props) => {\r\n  const cubes: JSX.Element[] = [];\r\n  let x = 0;\r\n  let z = 0;\r\n\r\n  surface.forEach((y, i) => {\r\n    for (let j = 0; j < y; j++) {\r\n      cubes.push(<Box key={`${i}-${j}`} x={x} y={y / 2} z={z} />);\r\n      z += 1;\r\n    }\r\n\r\n    x += 1;\r\n    z = 0;\r\n  });\r\n\r\n  return <>{cubes}</>;\r\n};\r\n\r\nconst Scene = ({ surface }: Props) => {\r\n  return (\r\n    <Canvas style={{ width: \"100%\", height: \"100%\" }} camera={{ position: [0, -10, 0], scale: [100, 100, 100] }}>\r\n      <ambientLight intensity={0.2} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Surface surface={surface} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}